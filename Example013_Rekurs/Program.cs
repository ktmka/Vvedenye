// string[,] table = new string[2,5];
// table[0,0]  table[0,1]  table[0,2] ....
// table[1,0]  table[1,1]

// table[1,2] = "word";
// for (int rows = 0; rows < 2; rows++){
//     for (int columns = 0; columns < 5; columns++){
//         Console.WriteLine($"-{table[rows, columns]}-");
//     }
// }

//---------------------------------------------------------------
// int[,] matrix = new int[3, 4];

// methods
// void printArray(int[,] matr){
//     for (int i = 0; i < matr.GetLength(0); i++){
//         for (int j = 0; j < matr.GetLength(1); j++){
//             Console.Write($"{matr[i, j]} ");
//         }
//     Console.WriteLine();   // переход на новую строку, получаем матрицу чисел
//     }
// }


//-----------------------------------------------------------------
// void fillArray(int[,] matr){
//     for (int i = 0; i < matr.GetLength(0); i++){
//         for (int j = 0; j < matr.GetLength(1); j++){
//             matr[i, j] = new Random().Next(1, 10);
//         }
//     }
// }
//-----------------------------------------------------------
// printArray(matrix);
// fillArray(matrix);
// Console.WriteLine();
// printArray(matrix);

//---------------------------------------------------------------
// Image
// int[,] pic = new int[,]
// {
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0 },
// {0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// };

// void printImage(int[,] matr){
//     for (int i = 0; i < matr.GetLength(0); i++){
//         for (int j = 0; j < matr.GetLength(1); j++){
//             if (matr[i, j] == 0)   Console.Write(" ");
//             else   Console.Write("+");
//         }
//     Console.WriteLine();   // переход на новую строку, получаем матрицу чисел
//     }
// }


// void fillImage(int row, int col){   // row строка, col колонка
//     if (pic[row, col] == 0){
//         pic[row, col] = 1;
//         fillImage(row-1, col);
//         fillImage(row, col-1);
//         fillImage(row+1, col);
//         fillImage(row, col+1);
//     }
// }

// printImage(pic);
// fillImage(13, 13);
// printImage(pic);
//--------------------------------------------------------

// double Faktorial(int n){    // 1! = 1, 0! = 1
//     if (n == 1)   return 1;
//     else   return n * Faktorial(n-1);


// }

// Console.Write(Faktorial(3));
// for (int i = 0; i < 40; i++)
// {
//     Console.WriteLine($"{i}! = {Faktorial(i)}");
// }

// Фибоначчи
// f(1) = 1;
// f(2) = 1;
// f(n) = f(n-1) + f(n-2);
int Fibonacci(int n){
    if (n == 1 || n == 2)  return 1;
    else return Fibonacci(n-1) + Fibonacci(n-2);
}

for (int i = 0; i < 10; i ++){
    Console.WriteLine(Fibonacci(i));
}